---

- name: Install System Packages
  apt: name={{ item }} state=present update_cache=yes cache_valid_time=3600
  sudo: yes
  with_items:
    - build-essential
    - python-dev
    - python-pip
    - postgresql-client
    - libpq-dev
    - python-pip
    - python-psycopg2
    - git
    - libjpeg8-dev

- name: Clone Django Repository
  git: repo={{ repo_url }} dest={{ django_home }} force=yes

- name: Install Python Dependencies
  sudo: yes
  pip:
    state: present
    requirements: "{{ django_home }}/requirements.txt"

- name: Get DB Hostvars
  set_fact:
    db_host: "{{ hostvars[groups[rds_db_instance][0]] }}"

- name: Get Secrets
  include_vars: secrets.yml

- name: Set DB URL
  set_fact:
    db_url: "{{ db_host.ec2_engine }}://{{ db_host.ec2_master_username }}:{{ db_password }}@{{ db_host.ec2__address }}:{{ db_host.ec2__port }}/{{ db_host.ec2_DBName }}"

- name: Run Migrations
  environment:
    DATABASE_URL: "{{ db_url }}"
    SECRET_KEY: secret_key
  django_manage:
    app_path: "{{ django_home }}/imagersite"
    settings: imagersite.production
    command: migrate

- name: Make Sorl Migrations
  sudo: yes
  environment:
    DATABASE_URL: "{{ db_url }}"
    SECRET_KEY: secret_key
  django_manage:
    app_path: "{{ django_home }}/imagersite"
    settings: imagersite.production
    command: makemigrations thumbnail

- name: Run Sorl Migrations
  sudo: yes
  environment:
    DATABASE_URL: "{{ db_url }}"
    SECRET_KEY: secret_key
  django_manage:
    app_path: "{{ django_home }}/imagersite"
    settings: imagersite.production
    command: migrate thumbnail


- name: Modify Media Ownership
  sudo: yes
  file: path="{{ django_home }}/imagersite/media/" recurse=True state=directory mode=0755 owner=www-data

# - name: Collect Static Files
#   environment:
#     DATABASE_URL: "{{ db_url }}"
#     SECRET_KEY: secret_key
#   django_manage:
#     app_path: "{{ django_home }}/imagersite"
#     settings: imagersite.settings
#     command: collectstatic
